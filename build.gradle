/*
 * linker
 * Copyright (C) 2020 raatiniemi
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, version 2 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

plugins {
    id("java")
    id("org.jetbrains.kotlin.jvm") version("1.3.72")
    id("jacoco")
    id("com.github.johnrengelman.shadow") version("6.0.0")
    id("de.jansauer.printcoverage") version "2.0.0"
    id("io.gitlab.arturbosch.detekt") version("1.13.1")
}

group 'me.raatiniemi'
version '0.0.1'

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

// noinspection GroovyUnusedAssignment
sourceCompatibility = JavaVersion.VERSION_1_8

// noinspection GroovyUnusedAssignment
targetCompatibility = JavaVersion.VERSION_1_8

// noinspection GroovyMissingReturnStatement
task(run) {
    if (project.hasProperty("config")) {
        // noinspection GrUnresolvedAccess
        String config = config

        // noinspection GroovyAssignabilityCheck
        args config
    }
}

repositories {
    mavenCentral()
    jcenter {
        content {
            // just allow to include kotlinx projects
            // detekt needs 'kotlinx-html' for the html report
            includeGroup "org.jetbrains.kotlinx"
        }
    }
}

detekt {
    buildUponDefaultConfig = true

    reports {
        html.enabled = false
        txt.enabled = false
        xml.enabled = false
    }
}

jar {
    manifest {
        attributes(
                'Implementation-Title': 'Linker',
                'Implementation-Version': archiveVersion,
                'Main-Class': "me.raatiniemi.linker.MainKt"
        )
    }
}

test {
    finalizedBy(tasks.jacocoTestReport)
}

jacocoTestReport {
    dependsOn(tasks.test)

    reports {
        xml.enabled = true
    }
}

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:2.11.0")

    testImplementation("junit:junit:4.11")
}
