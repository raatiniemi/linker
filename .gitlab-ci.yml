---
stages:
  - lint
  - build
  - test
  - registry

include:
  - local: '/.gitlab-ci/docker.yml'

.in-rust-environment:
  image: rust:slim-buster
  before_script:
    - rustc --version
    - cargo --version
    - rustup --version
    - rustup component add llvm-tools-preview
  tags:
    - docker

# stage: lint

lint:yaml:
  stage: lint
  image: python:buster
  script: |
    test -f requirements.txt && pip install -r requirements.txt
    yamllint -c .yamllint.yml .
  interruptible: true
  variables:
    PIP_CACHE_DIR: "${CI_PROJECT_DIR}/.cache/pip"
  tags:
    - docker

lint:docker:
  stage: lint
  extends:
    - .docker-lint

# stage: build

build:app:
  stage: build
  extends:
    - .in-rust-environment
  script: |
    cargo build --release --verbose
  interruptible: true
  needs: []
  artifacts:
    paths:
      - ./target
    expire_in: 2 hours

# stage: test

# yamllint disable rule:line-length
test:app:
  stage: test
  image: rustlang/rust:nightly-slim
  extends:
    - .in-rust-environment
  script: |
    apt-get update -qq && apt-get install -y -qq lcov --no-install-recommends
    cargo install --color=always --force grcov
    cargo test --workspace --verbose
    grcov . -s . --binary-path ./target/debug/ -t lcov --branch --ignore-not-existing --ignore "/*" -o coverage.info
    lcov -l coverage.info
  coverage: '/Total:\|\s*(\d+\.\d+)%/'
  interruptible: true
  needs: []
  variables:
    RUSTFLAGS: "-Zinstrument-coverage"
# yamllint enable rule:line-length

# stage: registry

registry:app:
  stage: registry
  extends:
    - .docker-registry
  only:
    - main
  needs:
    - job: build:app
    - job: test:app
      artifacts: false
  variables:
    DOCKER_FILE: "docker/app/Dockerfile"
