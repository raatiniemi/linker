stages:
  - lint
  - build
  - test
  - registry

include:
  - "/.gitlab-ci/docker.yml"

.in-gradle-environment:
  image: gradle:6.7.0-jdk15
  before_script:
    - export GRADLE_USER_HOME=`pwd`/.gradle
  variables:
    GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  tags:
    - docker

.in-rust-environment:
  image: rust:alpine
  before_script:
    - apk add musl-dev
    - rustc --version
    - cargo --version
    - rustup --version
    - rustup component add llvm-tools-preview
  tags:
    - docker

# stage: lint

lint:linker:
  stage: lint
  extends:
    - .in-gradle-environment
  script:
    - gradle detekt
  interruptible: true

# stage: build

build:cli:
  stage: build
  extends:
    - .in-gradle-environment
  script:
    - gradle --build-cache cli:assemble cli:shadowJar
  interruptible: true
  needs: []
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - .gradle
      - build
      - cli/build
  artifacts:
    paths:
      - cli/build/libs/*.jar

build:app:
  stage: build
  extends:
    - .in-rust-environment
  script: |
    cargo build --release --verbose
  interruptible: true
  needs: []
  artifacts:
    paths:
      - ./target
    expire_in: 2 hours

# stage: test

test:cli:
  stage: test
  extends:
    - .in-gradle-environment
  script:
    - gradle cli:test cli:printCoverage
  coverage: '/^Coverage:\s*?(\d+(?:\.\d+)?)%/'
  interruptible: true
  needs:
    - build:cli
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - .gradle
      - build
      - cli/build

test:app:
  stage: test
  image: rustlang/rust:nightly
  extends:
    - .in-rust-environment
  script: |
    apt-get update -qq && apt-get install -y -qq lcov --no-install-recommends
    cargo install --color=always --force grcov
    cargo test --workspace --verbose
    grcov . -s . --binary-path ./target/debug/ -t lcov --branch --ignore-not-existing --ignore "/*" -o coverage.info
    lcov -l coverage.info
  coverage: '/Total:\|\s*(\d+\.\d+)%/'
  interruptible: true
  needs: []
  variables:
    RUSTFLAGS: "-Zinstrument-coverage"

# stage: registry

registry:cli:
  stage: registry
  extends:
    - .docker-registry
  only:
    - main
  needs:
    - build:cli
    - test:cli
  variables:
    DOCKER_FILE: "docker/jdk/Dockerfile"

registry:app:
  stage: registry
  extends:
    - .docker-registry
  needs:
    - build:app
    - test:app
  variables:
    DOCKER_TAG_PREFIX: "rust-"
    DOCKER_FILE: "docker/rust/Dockerfile"
